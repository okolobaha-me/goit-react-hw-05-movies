{"version":3,"file":"static/js/523.aa7028e3.chunk.js","mappings":"0PAEaA,EAASC,EAAAA,GAAAA,GAAH,8HCANC,EAAYD,EAAAA,GAAAA,GAAH,sBAETE,EAAaF,EAAAA,GAAAA,IAAH,yCAIVG,EAAOH,EAAAA,GAAAA,EAAH,yC,SCHJI,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcL,EAAMM,IAAIC,MAAK,SAAAC,GAC3BL,EAAS,kCAAD,OAAmCK,SAE5C,CAACR,EAAMM,MAGR,UAACV,EAAD,aACKM,IAAS,SAAC,EAAD,CAAYO,IAAKP,KAC7B,SAACJ,EAAD,UAAOE,EAAMU,QACb,SAACZ,EAAD,UAAOE,EAAMW,gBCInB,EAhBa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBX,EAAAA,EAAAA,UAAS,IAAjC,eAAOa,EAAP,KAAaC,EAAb,KAMA,OAJAX,EAAAA,EAAAA,YAAU,YACRY,EAAAA,EAAAA,IAAgBJ,GAASL,MAAK,SAAAC,GAAC,OAAIO,EAAQP,QAC1C,CAACI,KAGF,SAAClB,EAAD,YACKoB,EAAKG,QACNH,EAAKI,MAAM,EAAG,IAAIC,KAAI,SAAAnB,GAAK,OAAI,SAACD,EAAD,CAAsBC,MAAOA,GAAjBA,EAAMM,W,kOCfzDc,IAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAEnC,IAAMC,EAAsBF,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,oDAGLC,EAAsBL,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,4CACTE,cAAe,SAGXC,EAAyBP,IAAAA,OAAa,CAC1CG,OAAQ,MACRC,QAAS,uCAGLI,EAAuBR,IAAAA,OAAa,CACxCG,OAAQ,MACRC,QAAS,wCAGEK,EAAW,WACtB,OAAOP,IAAsBf,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,KAAKC,YAGnCC,EAAe,SAAAC,GAC1B,OAAOR,EAAoB,CACzBS,OAAQ,CACND,MAAAA,KAED1B,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,KAAKC,YAGTI,EAAkB,SAAA7B,GAC7B,OAAOqB,EAAuBS,IAAvB,WAA+B9B,IAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,SAG7Cd,EAAkB,SAAAV,GAC7B,OAAOqB,EAAuBS,IAAvB,WAA+B9B,EAA/B,aAA6CC,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,KAAKhB,SAG1DuB,EAAkB,SAAA/B,GAC7B,OAAOqB,EAAuBS,IAAvB,WAA+B9B,EAA/B,aAA6CC,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,KAAKC,YAG1D1B,EAAa,mCAAG,WAAMC,GAAN,iFACbsB,EAAqBQ,IAArB,WAA6B9B,EAA7B,YADa,uCAC8BwB,KAAKQ,SAAS,GACpEC,WAFwB,2CAAH","sources":["components/Cast/Cast.styled.jsx","components/Actor/Actor.styled.jsx","components/Actor/Actor.jsx","components/Cast/Cast.jsx","js/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Actors = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport class ActorImage {}\n","import styled from 'styled-components';\n\nexport const ActorItem = styled.li``;\n\nexport const ActorImage = styled.img`\n  width: 100px;\n`;\n\nexport const Text = styled.p`\n  width: 150px;\n`;\n","import { useEffect, useState } from 'react';\nimport { getActorPhoto } from '../../js/API';\nimport { ActorImage, ActorItem, Text } from './Actor.styled';\nimport PropTypes from 'prop-types';\n\nexport const Actor = ({ actor }) => {\n  const [image, setImage] = useState(``);\n\n  useEffect(() => {\n    getActorPhoto(actor.id).then(r => {\n      setImage(`https://image.tmdb.org/t/p/w500${r}`);\n    });\n  }, [actor.id]);\n\n  return (\n    <ActorItem>\n      {!!image && <ActorImage src={image} />}\n      <Text>{actor.name}</Text>\n      <Text>{actor.character}</Text>\n    </ActorItem>\n  );\n};\n\nActor.propTypes = {\n  actor: PropTypes.object.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../js/API';\nimport { Actors } from './Cast.styled';\nimport { Actor } from '../Actor/Actor';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(r => setCast(r));\n  }, [movieId]);\n\n  return (\n    <Actors>\n      {!!cast.length &&\n        cast.slice(0, 12).map(actor => <Actor key={actor.id} actor={actor} />)}\n    </Actors>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.params = { api_key: '079f315d1c0a92bbce195275b13a313a' };\n\nconst getTrendFilmRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n});\n\nconst searchMoviesRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  include_adult: 'true',\n});\n\nconst getMovieDetailsRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/movie',\n});\n\nconst getActorPhotoRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/person',\n});\n\nexport const getTrend = () => {\n  return getTrendFilmRequest().then(r => r.data.results);\n};\n\nexport const searchMovies = query => {\n  return searchMoviesRequest({\n    params: {\n      query,\n    },\n  }).then(r => r.data.results);\n};\n\nexport const getMovieDetails = id => {\n  return getMovieDetailsRequest.get(`/${id}`).then(r => r.data);\n};\n\nexport const getMovieCredits = id => {\n  return getMovieDetailsRequest.get(`/${id}/credits`).then(r => r.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return getMovieDetailsRequest.get(`/${id}/reviews`).then(r => r.data.results);\n};\n\nexport const getActorPhoto = async id => {\n  return (await getActorPhotoRequest.get(`/${id}/images`)).data.profiles[0]\n    .file_path;\n};\n"],"names":["Actors","styled","ActorItem","ActorImage","Text","Actor","actor","useState","image","setImage","useEffect","getActorPhoto","id","then","r","src","name","character","movieId","useParams","cast","setCast","getMovieCredits","length","slice","map","axios","api_key","getTrendFilmRequest","method","baseURL","searchMoviesRequest","include_adult","getMovieDetailsRequest","getActorPhotoRequest","getTrend","data","results","searchMovies","query","params","getMovieDetails","get","getMovieReviews","profiles","file_path"],"sourceRoot":""}