{"version":3,"file":"static/js/770.76d2e1ff.chunk.js","mappings":"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","sources":["Pages/404/PageNotFound.jsx","Pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","js/getGenres.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Pages/MovieDetailsPage/MovieDetailsPage.jsx","js/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Container } from '../../components/Header/Header.styled';\n\nconst PageNotFound = () => {\n  return (\n    <Container>\n      <h1>\n        Page not found go to <Link to={'/'}>Home page</Link>{' '}\n      </h1>\n    </Container>\n  );\n};\n\nexport default PageNotFound;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 300px;\n  height: 100%;\n  margin-right: 30px;\n`;\n\nexport const DataWrapper = styled.div``;\n\nexport const FilmTitle = styled.h2``;\n\nexport const Data = styled.p``;\n\nexport const DataTitle = styled.h3``;\n\nexport const Options = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  gap: 10px;\n  color: blue;\n  margin-bottom: 20px;\n`;\n\nexport const OptionLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  :visited {\n    color: inherit;\n  }\n`;\n\nexport const Option = styled.li``;\n","const genres = {\n  28: {\n    en: 'Action',\n    uk: 'Бойовик',\n  },\n  12: {\n    en: 'Adventure',\n    uk: 'Пригоди',\n  },\n  16: {\n    en: 'Animation',\n    uk: 'Анімація',\n  },\n  35: {\n    en: 'Comedy',\n    uk: 'Комедія',\n  },\n  80: {\n    en: 'Crime',\n    uk: 'Кримінальний',\n  },\n  99: {\n    en: 'Documentary',\n    uk: 'Документальний',\n  },\n  18: {\n    en: 'Drama',\n    uk: 'Драма',\n  },\n  10751: {\n    en: 'Family',\n    uk: 'Сімейний',\n  },\n  14: {\n    en: 'Fantasy',\n    uk: 'Фентазі',\n  },\n  36: {\n    en: 'History',\n    uk: 'Історичний',\n  },\n  27: {\n    en: 'Horror',\n    uk: 'Жахи',\n  },\n  10402: {\n    en: 'Music',\n    uk: 'Мюзикл',\n  },\n  9648: {\n    en: 'Mystery',\n    uk: 'Містичний',\n  },\n  10749: {\n    en: 'Romance',\n    uk: 'Мелодрама',\n  },\n  878: {\n    en: 'Science Fiction',\n    uk: 'Наукова фантастика',\n  },\n  10770: {\n    en: 'TV Movie',\n    uk: 'ТВ фільм',\n  },\n  53: {\n    en: 'Thriller',\n    uk: 'Трилер',\n  },\n  10752: {\n    en: 'War',\n    uk: 'Воєнний',\n  },\n  37: {\n    en: 'Western',\n    uk: 'Вестерн',\n  },\n};\n\nexport const getGenres = list => {\n  if (!list.length) return '';\n  const language = window.location.hash.substring(1);\n  const g = [];\n\n  for (const re of list) {\n    if (g.length === 2) {\n      g.push('...');\n      break;\n    }\n\n    if (typeof re === 'object') {\n      g.push(re.name);\n      continue;\n    }\n\n    if (!genres[re]) continue;\n\n    g.push(genres[re][language]);\n  }\n\n  return g.map(g => `${g}`).join(', ');\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../../js/API';\nimport {\n  Data,\n  DataTitle,\n  DataWrapper,\n  FilmTitle,\n  Image,\n  Options,\n  Section,\n  OptionLink,\n  Option,\n} from './MovieDetailsPage.styled';\nimport { getGenres } from '../../js/getGenres';\nimport PageNotFound from '../404/PageNotFound';\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState({});\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation()\n  const navigation = useNavigate()\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(r => setFilm(r))\n      .catch(() => setError(true));\n  }, [movieId]);\n\n  const handleGoBackClick = () => {\n    navigation(location.state.from)\n  }\n\n  return (\n    <>\n      {film.title && (\n        <Section>\n          <Image src={`https://image.tmdb.org/t/p/w500${film.poster_path}`} />\n          <DataWrapper>\n            <button type='button' onClick={handleGoBackClick}>Go back</button>\n            <FilmTitle>\n              {film.title} ({film.release_date.slice(0, 4)})\n            </FilmTitle>\n            <Data>User score: {Math.round(film.popularity)}%</Data>\n            <DataTitle>Overview</DataTitle>\n            <Data>{film.overview}</Data>\n            <DataTitle>Genres</DataTitle>\n            <Data>{getGenres(film.genres)}</Data>\n            <DataTitle>Additional information</DataTitle>\n            <Options>\n              <Option>\n                <OptionLink to={'cast'}>Cast</OptionLink>\n              </Option>\n              <Option>\n                <OptionLink to={'reviews'}>Reviews</OptionLink>\n              </Option>\n            </Options>\n            <Outlet />\n          </DataWrapper>\n        </Section>\n      )}\n\n      {error && <PageNotFound />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.params = { api_key: '079f315d1c0a92bbce195275b13a313a' };\n\nconst getTrendFilmRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n});\n\nconst searchMoviesRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  include_adult: 'true',\n});\n\nconst getMovieDetailsRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/movie',\n});\n\nconst getActorPhotoRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/person',\n});\n\nexport const getTrend = () => {\n  return getTrendFilmRequest().then(r => r.data.results);\n};\n\nexport const searchMovies = query => {\n  return searchMoviesRequest({\n    params: {\n      query,\n    },\n  }).then(r => r.data.results);\n};\n\nexport const getMovieDetails = id => {\n  try {\n    return getMovieDetailsRequest.get(`/${id}`).then(r => r.data);\n  } catch (e) {\n    throw Error;\n  }\n};\n\nexport const getMovieCredits = id => {\n  return getMovieDetailsRequest.get(`/${id}/credits`).then(r => r.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return getMovieDetailsRequest.get(`/${id}/reviews`).then(r => r.data.results);\n};\n\nexport const getActorPhoto = async id => {\n  try {\n    return (await getActorPhotoRequest.get(`/${id}/images`)).data.profiles[0]\n      .file_path;\n  } catch (e) {\n    // console.log(e);\n    return false;\n  }\n};\n"],"names":["to","Section","styled","Image","DataWrapper","FilmTitle","Data","DataTitle","Options","OptionLink","Link","Option","genres","en","uk","getGenres","list","length","language","window","location","hash","substring","g","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","re","push","name","map","join","useState","film","setFilm","error","setError","movieId","useParams","useLocation","navigation","useNavigate","useEffect","getMovieDetails","then","r","catch","title","src","poster_path","type","onClick","state","from","release_date","slice","Math","round","popularity","overview","PageNotFound","axios","api_key","getTrendFilmRequest","method","baseURL","searchMoviesRequest","include_adult","getMovieDetailsRequest","getActorPhotoRequest","getTrend","data","results","searchMovies","query","params","id","get","Error","getMovieCredits","cast","getMovieReviews","getActorPhoto","profiles","file_path"],"sourceRoot":""}