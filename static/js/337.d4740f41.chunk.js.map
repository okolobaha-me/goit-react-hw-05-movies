{"version":3,"file":"static/js/337.d4740f41.chunk.js","mappings":"8MAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8LAaJE,EAAOF,EAAAA,GAAAA,GAAH,yL,SCbJG,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,SAACF,EAAD,WACE,SAACH,EAAD,CAAMM,GAAE,kBAAaD,EAAKE,IAA1B,SAAiCF,EAAKG,WCJ/BC,EAAOR,EAAAA,GAAAA,GAAH,0ECEJS,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACF,EAAD,YACKE,EAAKC,QAAUD,EAAKE,KAAI,SAAAR,GAAI,OAAI,SAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKE,W,sJCL5CO,E,QAAOb,GAAAA,KAAH,gD,SC2DjB,EAtDmB,WAAO,IAAD,EACvB,GAA0Bc,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,SAAO,GACrBC,EAAO,UAAG,IAAIC,gBAAgBP,EAASQ,QAAQC,IAAI,gBAA5C,QAAwD,IAErEC,EAAAA,EAAAA,YAAU,WACkB,IAAD,EAAzB,GAAIN,EAAYO,QAGd,OAFAZ,EAAQ,UAAC,IAAIQ,gBAAgBP,EAASQ,QAAQC,IAAI,gBAA1C,QAAsD,SAC9DL,EAAYO,SAAU,IAIxBC,EAAAA,EAAAA,IAAad,GAAOe,MAAK,SAAAC,GACvBjB,EAASiB,MAGXZ,EAAS,CAEPM,QAAQO,EAAAA,EAAAA,IAAmB,CACzBjB,MAAOA,IACNkB,eAEJ,CAAClB,EAAOE,EAASQ,OAAQN,IAE5B,IAAMe,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbrB,MAAOQ,GAETc,SAAU,SAAAC,GAAM,OAAItB,EAASsB,EAAOvB,UAGtC,OACE,iCACE,UAACJ,EAAD,CAAM0B,SAAUH,EAAOK,aAAvB,WACE,4BACE,kBACEnC,GAAG,QACHoC,KAAK,QACLC,KAAM,OACNC,MAAOR,EAAOI,OAAOvB,MACrB4B,SAAUT,EAAOU,kBAGrB,mBAAQH,KAAM,SAAd,yBAEC5B,EAAMJ,SAAU,SAACF,EAAA,EAAD,CAAUC,KAAMK,S,kOCtDzCgC,IAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAEnC,IAAMC,EAAsBF,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,oDAGLC,EAAsBL,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,4CACTE,cAAe,SAGXC,EAAyBP,IAAAA,OAAa,CAC1CG,OAAQ,MACRC,QAAS,uCAGLI,EAAuBR,IAAAA,OAAa,CACxCG,OAAQ,MACRC,QAAS,wCAGEK,EAAW,WACtB,OAAOP,IAAsBjB,MAAK,SAAAC,GAAC,OAAIA,EAAEwB,KAAKC,YAGnC3B,EAAe,SAAAd,GAC1B,OAAOmC,EAAoB,CACzBO,OAAQ,CACN1C,MAAAA,KAEDe,MAAK,SAAAC,GAAC,OAAIA,EAAEwB,KAAKC,YAGTE,EAAkB,SAAAtD,GAC7B,OAAOgD,EAAuB1B,IAAvB,WAA+BtB,IAAM0B,MAAK,SAAAC,GAAC,OAAIA,EAAEwB,SAG7CI,EAAkB,SAAAvD,GAC7B,OAAOgD,EAAuB1B,IAAvB,WAA+BtB,EAA/B,aAA6C0B,MAAK,SAAAC,GAAC,OAAIA,EAAEwB,KAAKK,SAG1DC,EAAkB,SAAAzD,GAC7B,OAAOgD,EAAuB1B,IAAvB,WAA+BtB,EAA/B,aAA6C0B,MAAK,SAAAC,GAAC,OAAIA,EAAEwB,KAAKC,YAG1DM,EAAa,mCAAG,WAAM1D,GAAN,iFACbiD,EAAqB3B,IAArB,WAA6BtB,EAA7B,YADa,uCAC8BmD,KAAKQ,SAAS,GACpEC,WAFwB,2CAAH","sources":["components/FilmList/Film/Film.styled.jsx","components/FilmList/Film/Film.jsx","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/MoviesPage/MoviesPage.styled.jsx","components/MoviesPage/MoviesPage.jsx","js/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: 10px;\n  line-height: 1;\n  text-decoration: none;\n  display: inline-block;\n  width: 100%;\n  color: inherit;\n\n  :visited {\n    color: inherit;\n  }\n`;\n\nexport const Item = styled.li`\n  padding: 0;\n  border-radius: 18px;\n\n  :nth-child(2n) {\n    background-color: #cdceff;\n  }\n\n  :nth-child(2n + 1) {\n    background-color: #bcbdff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Link } from './Film.styled';\n\nexport const Film = ({ film }) => {\n  return (\n    <Item>\n      <Link to={`/movies/${film.id}`}>{film.title}</Link>\n    </Item>\n  );\n};\n\nFilm.propTypes = {\n  film: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Film } from './Film/Film';\nimport { List } from './FilmList.styled';\n\nexport const FilmList = ({ list }) => {\n  return (\n    <List>\n      {!!list.length && list.map(film => <Film key={film.id} film={film} />)}\n    </List>\n  );\n};\n\nFilmList.propTypes = {\n  list: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 15px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { createSearchParams, useLocation, useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../../js/API';\nimport { FilmList } from '../FilmList/FilmList';\nimport { Form } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const firstRender = useRef(true);\n  const initial = new URLSearchParams(location.search).get('query') ?? '';\n\n  useEffect(() => {\n    if (firstRender.current) {\n      setQuery(new URLSearchParams(location.search).get('query') ?? '');\n      firstRender.current = false;\n      return;\n    }\n\n    searchMovies(query).then(r => {\n      setFilms(r);\n    });\n\n    navigate({\n      // pathname: 'listing',\n      search: createSearchParams({\n        query: query,\n      }).toString(),\n    });\n  }, [query, location.search, navigate]);\n\n  const formik = useFormik({\n    initialValues: {\n      query: initial,\n    },\n    onSubmit: values => setQuery(values.query),\n  });\n\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        <label>\n          <input\n            id=\"query\"\n            name=\"query\"\n            type={'text'}\n            value={formik.values.query}\n            onChange={formik.handleChange}\n          />\n        </label>\n        <button type={'submit'}>search</button>\n      </Form>\n      {!!films.length && <FilmList list={films} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.params = { api_key: '079f315d1c0a92bbce195275b13a313a' };\n\nconst getTrendFilmRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n});\n\nconst searchMoviesRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  include_adult: 'true',\n});\n\nconst getMovieDetailsRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/movie',\n});\n\nconst getActorPhotoRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/person',\n});\n\nexport const getTrend = () => {\n  return getTrendFilmRequest().then(r => r.data.results);\n};\n\nexport const searchMovies = query => {\n  return searchMoviesRequest({\n    params: {\n      query,\n    },\n  }).then(r => r.data.results);\n};\n\nexport const getMovieDetails = id => {\n  return getMovieDetailsRequest.get(`/${id}`).then(r => r.data);\n};\n\nexport const getMovieCredits = id => {\n  return getMovieDetailsRequest.get(`/${id}/credits`).then(r => r.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return getMovieDetailsRequest.get(`/${id}/reviews`).then(r => r.data.results);\n};\n\nexport const getActorPhoto = async id => {\n  return (await getActorPhotoRequest.get(`/${id}/images`)).data.profiles[0]\n    .file_path;\n};\n"],"names":["Link","styled","NavLink","Item","Film","film","to","id","title","List","FilmList","list","length","map","Form","useState","films","setFilms","query","setQuery","location","useLocation","navigate","useNavigate","firstRender","useRef","initial","URLSearchParams","search","get","useEffect","current","searchMovies","then","r","createSearchParams","toString","formik","useFormik","initialValues","onSubmit","values","handleSubmit","name","type","value","onChange","handleChange","axios","api_key","getTrendFilmRequest","method","baseURL","searchMoviesRequest","include_adult","getMovieDetailsRequest","getActorPhotoRequest","getTrend","data","results","params","getMovieDetails","getMovieCredits","cast","getMovieReviews","getActorPhoto","profiles","file_path"],"sourceRoot":""}