{"version":3,"file":"static/js/387.10958187.chunk.js","mappings":"0PAEaA,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAASD,EAAAA,GAAAA,GAAH,8EAMNE,EAAOF,EAAAA,GAAAA,GAAH,gDAIJG,EAAOH,EAAAA,GAAAA,EAAH,sB,SCgBjB,EA7BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GACvBA,EAAEC,OAIPT,EAAWQ,GAHTN,GAAS,QAKZ,CAACC,KAGF,UAACV,EAAD,aACKM,EAAQU,QACTV,EAAQW,KAAI,SAAAC,GAAG,OACb,UAAChB,EAAD,YACE,SAACC,EAAD,UAAOe,EAAIC,UACX,SAACf,EAAD,UAAOc,EAAIE,YAFAF,EAAIG,SAKlBb,IAAS,2D,kOC3BlBc,IAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAEnC,IAAMC,EAAsBF,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,oDAGLC,EAAsBL,IAAAA,OAAa,CACvCG,OAAQ,MACRC,QAAS,4CACTE,cAAe,SAGXC,EAAyBP,IAAAA,OAAa,CAC1CG,OAAQ,MACRC,QAAS,uCAGLI,EAAuBR,IAAAA,OAAa,CACxCG,OAAQ,MACRC,QAAS,wCAGEK,EAAW,WACtB,OAAOP,IAAsBV,MAAK,SAAAC,GAAC,OAAIA,EAAEiB,KAAKC,YAGnCC,EAAe,SAAAC,GAC1B,OAAOR,EAAoB,CACzBS,OAAQ,CACND,MAAAA,KAEDrB,MAAK,SAAAC,GAAC,OAAIA,EAAEiB,KAAKC,YAGTI,EAAkB,SAAAhB,GAC7B,IACE,OAAOQ,EAAuBS,IAAvB,WAA+BjB,IAAMP,MAAK,SAAAC,GAAC,OAAIA,EAAEiB,QACxD,MAAOO,GACP,MAAMC,QAIGC,EAAkB,SAAApB,GAC7B,OAAOQ,EAAuBS,IAAvB,WAA+BjB,EAA/B,aAA6CP,MAAK,SAAAC,GAAC,OAAIA,EAAEiB,KAAKU,SAG1D7B,EAAkB,SAAAQ,GAC7B,OAAOQ,EAAuBS,IAAvB,WAA+BjB,EAA/B,aAA6CP,MAAK,SAAAC,GAAC,OAAIA,EAAEiB,KAAKC,YAG1DU,EAAa,mCAAG,WAAMtB,GAAN,0FAEXS,EAAqBQ,IAArB,WAA6BjB,EAA7B,YAFW,uCAEgCW,KAAKY,SAAS,GACpEC,WAHsB,0DAMlB,GANkB,wDAAH","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","js/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Review = styled.li`\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../js/API';\nimport { Name, Review, ReviewList, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [noRev, setNoRev] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(r => {\n      if (!r.length) {\n        setNoRev(true);\n        return;\n      }\n      setReviews(r);\n    });\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {!!reviews.length &&\n        reviews.map(rev => (\n          <Review key={rev.id}>\n            <Name>{rev.author}</Name>\n            <Text>{rev.content}</Text>\n          </Review>\n        ))}\n      {!!noRev && <p>There is no any review yet</p>}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.params = { api_key: '079f315d1c0a92bbce195275b13a313a' };\n\nconst getTrendFilmRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n});\n\nconst searchMoviesRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  include_adult: 'true',\n});\n\nconst getMovieDetailsRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/movie',\n});\n\nconst getActorPhotoRequest = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3/person',\n});\n\nexport const getTrend = () => {\n  return getTrendFilmRequest().then(r => r.data.results);\n};\n\nexport const searchMovies = query => {\n  return searchMoviesRequest({\n    params: {\n      query,\n    },\n  }).then(r => r.data.results);\n};\n\nexport const getMovieDetails = id => {\n  try {\n    return getMovieDetailsRequest.get(`/${id}`).then(r => r.data);\n  } catch (e) {\n    throw Error;\n  }\n};\n\nexport const getMovieCredits = id => {\n  return getMovieDetailsRequest.get(`/${id}/credits`).then(r => r.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return getMovieDetailsRequest.get(`/${id}/reviews`).then(r => r.data.results);\n};\n\nexport const getActorPhoto = async id => {\n  try {\n    return (await getActorPhotoRequest.get(`/${id}/images`)).data.profiles[0]\n      .file_path;\n  } catch (e) {\n    // console.log(e);\n    return false;\n  }\n};\n"],"names":["ReviewList","styled","Review","Name","Text","useState","reviews","setReviews","noRev","setNoRev","movieId","useParams","useEffect","getMovieReviews","then","r","length","map","rev","author","content","id","axios","api_key","getTrendFilmRequest","method","baseURL","searchMoviesRequest","include_adult","getMovieDetailsRequest","getActorPhotoRequest","getTrend","data","results","searchMovies","query","params","getMovieDetails","get","e","Error","getMovieCredits","cast","getActorPhoto","profiles","file_path"],"sourceRoot":""}